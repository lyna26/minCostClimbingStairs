int minCost(int* cost, int n) {
    if (n == 0) {
        return cost[0];
    }

    if (n == 1) {
        return cost[1];
    }

    // Calculate the minimum cost for reaching the current step (n)
    int min1 = minCost(cost, n - 1); // Cost of reaching n-1
    int min2 = minCost(cost, n - 2); // Cost of reaching n-2

    // Return the minimum cost to reach step n
    return cost[n] + fmin(min1, min2);
}

int main() {
    int cost[] = {10, 15, 20, 25, 30};
    int n = sizeof(cost) / sizeof(cost[0]);

    int minTotalCost = minCost(cost, n - 1); // n-1 because the index is 0-based
    printf("Minimum cost to climb the stairs: %d\n", minTotalCost);

    return 0;
}
